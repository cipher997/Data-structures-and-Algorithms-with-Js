<html>
  <head>
    <title>Circular Queue in Javascript - Kartik Gaikwad Codes</title>
    <script>
      class Queue {
        constructor(size) {
          this.max = size;
          this.items = new Array(size);
          this.currentSize = 0;
          this.rear = -1;
          this.front = -1;
        }
        enqueue(val) {
          if (this.currentSize != this.max) {
            if (this.rear == this.max - 1) {
              this.rear = 0;
            } else {
              this.rear++;
            }
            this.items[this.rear] = val;
            this.currentSize++;
            if (this.front == -1) {
              this.front = this.rear;
            }
          }
        }
        dequeue() {
          if (this.currentSize != 0) {
            this.items[this.front] = null;
            if (this.front == this.max - 1) {
              this.front = 0;
            } else {
              this.front++;
            }
            this.currentSize--;
          } else {
            this.front = -1;
            this.rear = -1;
            alert("queue is empty");
          }
        }
      }

      let queue = new Queue(5);
    </script>
  </head>
  <body>
    <h1>Circular Queue in Javascript</h1>
  </body>
</html>

<!-- These DSA codes are created, for those who have immense interest in coding and
programming.. everything is open to you people out there on my personal Github
account (https://github.com/cipher997) for better understanding of Data structures and Algorithms in
terms of my personal learnings. If you have any doubts please feel free to
connect (email-id:kartik97gaikwad@gmail.com) regarding general coding
informational purposes only! -->
